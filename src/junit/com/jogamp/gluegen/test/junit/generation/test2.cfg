Package com.jogamp.gluegen.test.junit.generation
JavaClass Bindingtest2
Style InterfaceAndImpl
JavaOutputDir classes
NativeOutputDir native

# Use a ProcAddressTable so we dynamically look up the routines
EmitProcAddressTable true
ProcAddressTableClassName Bindingtest2ProcAddressTable
GetProcAddressTableExpr _table
ProcAddressNameExpr PFN $UPPERCASE({0}) PROC

# Force all of the methods to be emitted using dynamic linking so we
# don't need to link against any emulation library on the desktop or
# depend on the presence of an import library for a particular device
ForceProcAddressGen __ALL__

# Also force the calling conventions of the locally generated function
# pointer typedefs for these routines to MYAPIENTRY
# LocalProcAddressCallingConvention __ALL__ MYAPIENTRY

# Opaque long void*

# Undefined struct forward declaration, implementation secret: 'struct T2_UndefStruct;'
Opaque long T2_UndefStruct*
Ignore T2_UndefStruct

EmitStruct T2_ThreadAffinity
StructPackage T2_ThreadAffinity com.jogamp.gluegen.test.junit.generation

EmitStruct T2_UserData
StructPackage T2_UserData com.jogamp.gluegen.test.junit.generation
ReturnsStringOnly T2_UserData.name

EmitStruct T2_PointerStorage
StructPackage T2_PointerStorage com.jogamp.gluegen.test.junit.generation

EmitStruct T2_InitializeOptions
StructPackage T2_InitializeOptions com.jogamp.gluegen.test.junit.generation
ReturnsStringOnly T2_InitializeOptions.ProductName
ReturnsStringOnly T2_InitializeOptions.ProductVersion

# ReturnedArrayLength T2_InitializeOptions.OverrideThreadAffinity 1
MaxOneElement T2_InitializeOptions.OverrideThreadAffinity

# Begin JavaCallback.
#
# JavaCallback requires `JNI_OnLoad*(..)` and `JVMUtil_GetJNIEnv(..)`
LibraryOnLoad Bindingtest2

# typedef void ( * T2_CallbackFunc01)(size_t id, const char* msg, void* usrParam);
# void MessageCallback01(T2_CallbackFunc01 cbFunc, void* usrParam);
# void InjectMessageCallback01(size_t id, const char* msg);
ArgumentIsString T2_CallbackFunc01 1
ArgumentIsString InjectMessageCallback01 1

# Define a JavaCallback.
#   Set JavaCallback via function `MessageCallback01` if `T2_CallbackFunc01` argument is non-null, otherwise removes the callback and associated resources.
#   It uses `usrParam` as the resource-key to map to the hidden native-usrParam object,
#   hence a matching 'usrParam' must be passed for setting and removal of the callback.
#
#   It uses the function-pointer argument `T2_CallbackFunc01` as the callback function type
#   and marks `T2_CallbackFunc01`s 3rd argument (index 2) as the mandatory user-param for Java Object mapping.
#
#   Note: An explicit `isMessageCallback01Mapped(Object usrParam)` is being created to explicitly query whether `usrParam` maps to the associated resources.
JavaCallbackDef  MessageCallback01 T2_CallbackFunc01 2

#
# End JavaCallback

# typedef void ( * T2_CallbackFunc02)(const T2_Callback02UserType* usrParam);
# void MessageCallback02(T2_CallbackFunc02 cbFunc, const T2_Callback02UserType* usrParam);
# void InjectMessageCallback02(size_t id, const char* msg);
ArgumentIsString InjectMessageCallback02 1
JavaCallbackDef  MessageCallback02 T2_CallbackFunc02 0

CustomCCode #include "test2.h"

Import com.jogamp.gluegen.test.junit.generation.Bindingtest2
Import com.jogamp.gluegen.test.junit.generation.T2_PointerStorage
Import com.jogamp.gluegen.test.junit.generation.T2_InitializeOptions
Import com.jogamp.gluegen.test.junit.generation.T2_ThreadAffinity
Import com.jogamp.gluegen.test.junit.generation.T2_UserData

CustomJavaCode Bindingtest2Impl  private static Bindingtest2ProcAddressTable _table = new Bindingtest2ProcAddressTable();
CustomJavaCode Bindingtest2Impl  public static void resetProcAddressTable(DynamicLookupHelper lookup) {
CustomJavaCode Bindingtest2Impl      _table.reset(lookup);
CustomJavaCode Bindingtest2Impl  }

